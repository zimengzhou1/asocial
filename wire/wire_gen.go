// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"asocial/pkg/chat"
	"asocial/pkg/common"
	"asocial/pkg/config"
	"asocial/pkg/infra"
)

// Injectors from wire.go:

func InitializeChatServer(name string) (*common.Server, error) {
	configConfig, err := config.NewConfig()
	if err != nil {
		return nil, err
	}
	engine := chat.NewGinServer()
	melodyChatConn := chat.NewMelodyChatConn(configConfig)
	idGenerator, err := common.NewSonyFlake()
	if err != nil {
		return nil, err
	}
	publisher, err := infra.NewKafkaPublisher(configConfig)
	if err != nil {
		return nil, err
	}
	messageServiceImpl := chat.NewMessageServiceImpl(idGenerator, publisher)
	router, err := infra.NewBrokerRouter(name)
	if err != nil {
		return nil, err
	}
	subscriber, err := infra.NewKafkaSubscriber(configConfig)
	if err != nil {
		return nil, err
	}
	messageSubscriber, err := chat.NewMessageSubscriber(name, router, configConfig, subscriber, melodyChatConn)
	if err != nil {
		return nil, err
	}
	httpServer := chat.NewHttpServer(name, configConfig, engine, melodyChatConn, messageServiceImpl, messageSubscriber)
	chatRouter := chat.NewRouter(httpServer)
	server := common.NewServer(name, chatRouter)
	return server, nil
}
