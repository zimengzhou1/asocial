services:
  reverse-proxy:
    image: traefik:v2.11
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80" # HTTP
      - "8080:8080" # Traefik Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  frontend:
    image: zimengzhou1/frontend
    build:
      context: ./frontend
      dockerfile: dev.Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rcweb.rule=PathPrefix(`/`)"
      - "traefik.http.routers.rcweb.entrypoints=web"
      - "traefik.http.routers.rcweb.service=rcweb"
      - "traefik.http.services.rcweb.loadbalancer.server.port=3000"

  backend:
    restart: always
    image: zimengzhou1/backend
    build:
      context: ./
      dockerfile: go.Dockerfile
    environment:
      REDIS_ADDR: redis:6379
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`) || PathPrefix(`/health`) || PathPrefix(`/ready`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.routers.backend.service=backend"
      - "traefik.http.services.backend.loadbalancer.server.port=3001"
    volumes:
      - ./config.yaml:/app/config.yaml
    depends_on:
      - redis

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379" # Exposed for local development
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data

volumes:
  redis-data:
