services:
  reverse-proxy:
    image: traefik:v2.11
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80" # HTTP
      - "8080:8080" # Traefik Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  frontend:
    image: zimengzhou1/frontend
    build:
      context: ./frontend
      dockerfile: dev.Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rcweb.rule=PathPrefix(`/`)"
      - "traefik.http.routers.rcweb.entrypoints=web"
      - "traefik.http.routers.rcweb.service=rcweb"
      - "traefik.http.services.rcweb.loadbalancer.server.port=3000"

  backend:
    restart: always
    image: zimengzhou1/backend
    build:
      context: ./
      dockerfile: go.Dockerfile
    environment:
      REDIS_ADDR: redis:6379
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: asocial
      DB_USER: asocial
      DB_PASSWORD: asocial_dev_password
      DB_SSLMODE: disable
      FIREBASE_CREDENTIALS_PATH: /app/firebase-credentials.json
      APP_URL: http://localhost
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`) || PathPrefix(`/health`) || PathPrefix(`/ready`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.routers.backend.service=backend"
      - "traefik.http.services.backend.loadbalancer.server.port=3001"
    volumes:
      - ./config.yaml:/app/config.yaml
      - ${FIREBASE_CREDENTIALS_FILE:-/Users/zimeng/Home/asocial-dev-89a09-firebase-adminsdk-fbsvc-ff5fc8ef22.json}:/app/firebase-credentials.json:ro
    depends_on:
      - redis
      - postgres

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379" # Exposed for local development
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: asocial
      POSTGRES_USER: asocial
      POSTGRES_PASSWORD: asocial_dev_password
    ports:
      - "5432:5432" # Exposed for local development
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U asocial"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  redis-data:
  postgres-data:
